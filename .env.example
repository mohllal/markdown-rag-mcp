# Markdown RAG MCP Configuration Example
# Copy this file to .env and customize the values for your setup

# =============================================================================
# Milvus Vector Database Configuration
# =============================================================================

# Milvus server connection
MARKDOWN_RAG_MCP_MILVUS_HOST=localhost
MARKDOWN_RAG_MCP_MILVUS_PORT=19530

# Authentication (if Milvus auth is enabled)
# MARKDOWN_RAG_MCP_MILVUS_USER=your_username
# MARKDOWN_RAG_MCP_MILVUS_PASSWORD=your_password

# Database and collection settings
MARKDOWN_RAG_MCP_MILVUS_DB_NAME=default
MARKDOWN_RAG_MCP_MILVUS_COLLECTION_PREFIX=markdown_rag_mcp
MARKDOWN_RAG_MCP_MILVUS_CONNECTION_TIMEOUT=30

# =============================================================================
# Embedding Model Configuration
# =============================================================================

# HuggingFace model for embeddings (local processing)
MARKDOWN_RAG_MCP_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# Device for embedding inference: cpu, cuda, mps, or auto
MARKDOWN_RAG_MCP_EMBEDDING_DEVICE=auto

# Performance settings
MARKDOWN_RAG_MCP_EMBEDDING_BATCH_SIZE=32
MARKDOWN_RAG_MCP_EMBEDDING_MAX_LENGTH=512

# Optional: Custom cache directory for models
# MARKDOWN_RAG_MCP_EMBEDDING_CACHE_DIR=/custom/path/to/models

# =============================================================================
# Document Processing Configuration
# =============================================================================

# Document chunking settings
MARKDOWN_RAG_MCP_CHUNK_SIZE_LIMIT=1000
MARKDOWN_RAG_MCP_CHUNK_OVERLAP=50

# Search settings
MARKDOWN_RAG_MCP_SIMILARITY_THRESHOLD=0.7
MARKDOWN_RAG_MCP_DEFAULT_SEARCH_LIMIT=10
MARKDOWN_RAG_MCP_MAX_SEARCH_LIMIT=100

# File processing limits
MARKDOWN_RAG_MCP_MAX_FILE_SIZE_MB=10

# =============================================================================
# File Monitoring Configuration
# =============================================================================

# Enable/disable file system monitoring
MARKDOWN_RAG_MCP_MONITORING_ENABLED=true

# Monitoring settings
MARKDOWN_RAG_MCP_MONITORING_DEBOUNCE_SECONDS=2.0

# =============================================================================
# Performance Configuration
# =============================================================================

# Concurrency limits
MARKDOWN_RAG_MCP_MAX_CONCURRENT_EMBEDDINGS=4
MARKDOWN_RAG_MCP_MAX_CONCURRENT_INDEXING=2
MARKDOWN_RAG_MCP_CONNECTION_POOL_SIZE=10

# Operation timeouts
MARKDOWN_RAG_MCP_SEARCH_TIMEOUT_SECONDS=30

# =============================================================================
# Logging Configuration
# =============================================================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
MARKDOWN_RAG_MCP_LOG_LEVEL=INFO

# Optional: Log to file instead of stdout
# MARKDOWN_RAG_MCP_LOG_FILE=/path/to/logfile.log

# Custom log format
# MARKDOWN_RAG_MCP_LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# =============================================================================
# Development Configuration
# =============================================================================

# Enable debug mode for development
MARKDOWN_RAG_MCP_DEBUG_MODE=false

# Enable performance profiling
MARKDOWN_RAG_MCP_PROFILE_PERFORMANCE=false

# Enable strict schema validation
MARKDOWN_RAG_MCP_VALIDATE_SCHEMAS=true

# =============================================================================
# Advanced Configuration Notes
# =============================================================================
#
# Device Selection:
# - auto: Automatically detect best available (CUDA > MPS > CPU)
# - cuda: Use NVIDIA GPU (requires CUDA and PyTorch with CUDA)
# - mps: Use Apple Silicon GPU (requires macOS with Apple Silicon)
# - cpu: Use CPU only (works everywhere but slower)
#
# Performance Tuning:
# - Increase batch_size for faster embedding generation (more memory usage)
# - Increase max_concurrent_* for faster processing (more resource usage)
# - Adjust chunk_size_limit based on your document structure
# - Lower similarity_threshold for more results (but lower quality)
#
# File Monitoring:
# - Set monitoring_enabled=false to disable automatic file watching
# - Increase debounce_seconds if you have rapid file changes
#
# Milvus Performance:
# - Increase connection_pool_size for high concurrency
# - Ensure Milvus has sufficient memory for your document collection
# - Consider tuning Milvus index parameters for large datasets
#
